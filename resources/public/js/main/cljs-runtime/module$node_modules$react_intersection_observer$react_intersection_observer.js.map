{
"version":3,
"file":"module$node_modules$react_intersection_observer$react_intersection_observer.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/react-intersection-observer/react-intersection-observer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_intersection_observer$react_intersection_observer\"] = function(global,require,module,exports) {\nvar React = require('react');\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/React.createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  React.useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexports.InView = InView;\nexports.default = InView;\nexports.observe = observe;\nexports.useInView = useInView;\n//# sourceMappingURL=react-intersection-observer.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","optionsToId","options","keys","sort","filter","undefined","map","RootIds","has","root","rootId","set","toString","get","createObserver","id","instance","ObserverMap","elements","Map","observer","IntersectionObserver","entries","forEach","entry","_elements$get","inView","isIntersecting","thresholds","some","threshold","intersectionRatio","trackVisibility","isVisible","callback","Array","isArray","observe","element","_createObserver","callbacks","push","unobserve","splice","indexOf","size","disconnect","React","WeakMap","InView","_React$Component","props","_this","node","_unobserveCb","handleNode","_this.handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","_this.handleChange","children","onChange","state","_proto","componentDidUpdate","_proto.componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_proto.componentWillUnmount","_proto.observeNode","_this$props","_proto.unobserve","render","_proto.render","_this$state","ref","_this$props2","as","tag","sourceKeys","excluded","createElement","Component","displayName","defaultProps","default","useInView","_temp","_ref","useRef","_React$useState","useState","setRef","useCallback","current","useEffect","result"]
}
